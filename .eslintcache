[{"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\index.js":"1","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\App.js":"2","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\DishDetails.js":"6","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\Header.js":"8","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\Footer.js":"9","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\promotions.js":"13","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\leaders.js":"14","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\AboutusComponent.js":"15"},{"size":639,"mtime":1610650819637,"results":"16","hashOfConfig":"17"},{"size":340,"mtime":1610998617936,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609431613609,"results":"19","hashOfConfig":"17"},{"size":1567,"mtime":1612556973972,"results":"20","hashOfConfig":"17"},{"size":1490,"mtime":1612038985990,"results":"21","hashOfConfig":"17"},{"size":2389,"mtime":1612557874818,"results":"22","hashOfConfig":"17"},{"size":2075,"mtime":1612558228140,"results":"23","hashOfConfig":"17"},{"size":4120,"mtime":1615643430735,"results":"24","hashOfConfig":"17"},{"size":2639,"mtime":1612024777913,"results":"25","hashOfConfig":"17"},{"size":1110,"mtime":1612040651528,"results":"26","hashOfConfig":"17"},{"size":10542,"mtime":1614717132548,"results":"27","hashOfConfig":"17"},{"size":4280,"mtime":1612039017888,"results":"28","hashOfConfig":"17"},{"size":445,"mtime":1612039041479,"results":"29","hashOfConfig":"17"},{"size":2382,"mtime":1612039061188,"results":"30","hashOfConfig":"17"},{"size":4336,"mtime":1612558640186,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"96ghpo",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\index.js",[],["66","67"],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\App.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\MenuComponent.js",["68","69","70","71"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport DishDetails from './DishDetails';\r\n\r\nfunction RenderMenuItem({dish, onClick}){\r\n    return(\r\n        <Card>\r\n        <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name}/> \r\n            <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n        </Link>\r\n            \r\n        </Card>\r\n    );\r\n}\r\n    \r\n    const Menu = (props)=>{\r\n        const menu=props.dishes.map((dish)=>{\r\n            return(\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />          \r\n                </div>\r\n            );\r\n        });\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>MENU</h3>\r\n                    <hr/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                \r\n            </div>          \r\n        )\r\n    }\r\n        \r\n        \r\n    \r\nexport default Menu","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\DishDetails.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\MainComponent.js",["72","73","74"],"import React, {Component} from 'react'\r\nimport { Navbar, NavbarBrand } from 'reactstrap'\r\nimport Menu from './MenuComponent';\r\nimport DishDetails from './DishDetails';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { COMMENTS } from '../shared/comments';\r\nimport { PROMOTIONS } from '../shared/promotions';\r\nimport { LEADERS } from '../shared/leaders';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutusComponent';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       dishes: DISHES,\r\n       comments: COMMENTS,\r\n       promotions: PROMOTIONS,\r\n       leaders: LEADERS\r\n    }\r\n  }\r\n   \r\n  render(){\r\n    const HomePage= () => {\r\n      return(\r\n        <Home dish={this.state.dishes.filter((dish)=>dish.featured)[0]}\r\n              promotion={this.state.promotions.filter((promo)=>promo.featured)[0]}\r\n              leader={this.state.leaders.filter((leader)=>leader.featured)[0]}/>\r\n      );\r\n    }\r\n    const DishWithId=({match})=>{\r\n      console.log(`dish id =${match.params.dishId}`)\r\n      return(\r\n        \r\n        <DishDetails dish={this.state.dishes.filter((dish) => dish.id === parseInt(match.    params.dishId,10))[0]} \r\n          comments={this.state.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n    );\r\n\r\n    };\r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <Header/>\r\n      <Switch>\r\n        <Route path=\"/home\" component={HomePage}/>\r\n        <Route exact path=\"/menu\" component={ () => <Menu dishes={this.state.dishes}/> }/>\r\n        <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n        <Route exact path=\"/aboutus\" component={()=> <About leaders={this.state.leaders}/>}/>\r\n        <Route exact path=\"/contactus\" component={Contact}/> \r\n        <Redirect to=\"/home\"/> \r\n      </Switch>  \r\n      <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\Header.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\Footer.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\ContactComponent.js",["75","76","77"],"import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched:{\r\n                firstname: false,\r\n                lastname: false,\r\n                email: false,\r\n                telnum: false\r\n            }\r\n        };\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n        this.handleBlur=this.handleBlur.bind(this);\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target\r\n        const value = target.type === 'checkbox' ? target.checked : target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name] : value \r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n    render(){\r\n        const errors=this.validate(this.state.firstname, this.state.lastname, this.state.email, this.state.telnum);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className = \"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                            value={this.state.contactType}\r\n                                            onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            </Form>\r\n                    \r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\MANAN\\Desktop\\Re-React\\confusion\\src\\components\\AboutusComponent.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":3,"column":41,"nodeType":"84","messageId":"85","endLine":3,"endColumn":49},{"ruleId":"82","severity":1,"message":"87","line":3,"column":51,"nodeType":"84","messageId":"85","endLine":3,"endColumn":59},{"ruleId":"82","severity":1,"message":"88","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":19},{"ruleId":"82","severity":1,"message":"89","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":16},{"ruleId":"82","severity":1,"message":"90","line":2,"column":18,"nodeType":"84","messageId":"85","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":40,"column":84,"nodeType":"93","messageId":"94","endLine":40,"endColumn":100,"fix":"95"},{"ruleId":"82","severity":1,"message":"96","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"97","line":2,"column":22,"nodeType":"84","messageId":"85","endLine":2,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":98,"column":29,"nodeType":"100","endLine":98,"endColumn":71},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardBody' is defined but never used.","'DishDetails' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property params.","MemberExpression","unexpectedWhitespace",{"range":"103","text":"104"},"'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1344,1349],"."]